@using System.Text.Json;
@{

}
@model Tuple<VuelingExchangeManagerClient.ResponseDtos.CustomerResponseDto>




<!DOCTYPE html>
<html>
<head>
    <title>Gestión de Finanzas</title>
    <style>

        body {
            font-family: Arial, sans-serif;
            background-color: #f3f3f3;
        }

        h1, h2, p, label {
            color: #333;
        }

        /* Estilos para el modal y su contenido */
        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.4);
        }

        .balance-form {
            background-color: #fefefe;
            margin: 15% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 30%;
        }

        .add-wallet-modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.4);
        }

        .cliente, .cartera {
            border: 1px solid #888;
            border-radius: 8px;
            padding: 20px;
            margin: 20px 0;
            background-color: #fff;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);
        }

            .cliente h2, .cartera h2 {
                color: #444;
                margin: 0;
                font-size: 1.5em;
            }

            .cliente p, .cartera p {
                color: #666;
                margin: 10px 0;
                font-size: 1em;
            }

        select, button {
            padding: 10px;
            border: none;
            border-radius: 5px;
            margin: 10px 0;
            color: #fff;
        }

        select {
            background-color: #888;
        }

        button {
            background-color: #555;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        button:hover {
            background-color: #333;
        }

        .coin-btn {
            color: #007bff;
            background: none;
            text-decoration: underline;
        }

        .coin-btn:hover {
            color: #0056b3;
        }

        ul {
            list-style-type: none;
            padding-left: 0;
        }

        ul li {
            margin: 10px 0;
        }



    </style>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
</head>
<body>
    <h1>Gestión de Finanzas Personales</h1>

    <div class="cliente">
        <h2>@Model.Item1.Name</h2>
        <p>ID: @Model.Item1.Id</p>
        <p>Email: @Model.Item1.Email</p>
    </div>

    <label for="wallets">Escoge una cartera:</label>
    <select id="wallets" name="wallets">
        @foreach (var cartera in Model.Item1.Wallets)
        {
            <option value="@cartera.Id">@cartera.Coin.Name</option>
        }
    </select>

    <button class="show-add-wallet-form-btn">Añadir Cartera</button>

    <div class="add-wallet-modal modal" style="display: none;">
        <form class="balance-form" action="@Url.Action("AddWallet", "Home")" method="post">
            <div>
                <label for="coinName">Nombre de la Moneda:</label>
                <input type="text" id="coinName" name="coinName" required />
            </div>
            <div>
                <button type="submit">Crear Cartera</button>
            </div>
        </form>
    </div>

    @foreach (var cartera in Model.Item1.Wallets)
    {
        <div class="cartera" id="wallet-@cartera.Id" style="display: none;">
            <h2>@cartera.Coin.Name</h2>
            <p>Cantidad: @cartera.Balance</p>

            @{

                <button class="show-form-btn">Añadir Movimiento</button>

                <div class="modal">
                    <form class="balance-form" action="@Url.Action("AddBalance", "Home")" method="post">
                        <input type="hidden" name="coinName" value="@cartera.Coin.Name" />
                        <div>
                            <label for="variation">Variación:</label>
                            <input type="number" id="variation" name="variation" step="0.01" required />
                        </div>
                        <div>
                            <label for="category">Categoría:</label>
                            <input type="text" id="category" name="category" required />
                        </div>
                        <div>
                            <label for="description">Descripción:</label>
                            <input type="text" id="description" name="description" required />
                        </div>
                        <div>
                            <button type="submit" class="income-btn" style="background-color: green;">Ingreso</button>
                            <button type="submit" class="expense-btn" style="background-color: red;">Gasto</button>
                        </div>
                    </form>
                </div>
                
                <button class="show-balance-form-btn">Consultar Movimientos</button>
                <div class="modal">
                    <form class="balance-form" action="@Url.Action("SelectedCoin", "Home")" method="post">
                        <input type="hidden" name="coinName" value="@cartera.Coin.Name" />
                        <div>
                            <label for="minDate">Desde </label>
                            <input type="date" name="minDate" required />
                        </div>
                        <div>
                            <label for="maxDate">Hasta </label>
                            <input type="date" name="maxDate" required />
                        </div>
                        <div>
                            <button type="submit" class="balance-send-btn">Consultar</button>
                        </div>
                    </form>
                </div>

            }
        </div>
    }

    <canvas id="ingresosGastosChart"></canvas>

    <div class="balances">
        @foreach (var cartera in Model.Item1.Wallets)
        {
            @foreach (var balance in cartera.BalanceHistorics)
            {
                <h2>@cartera.Coin.Name</h2>
                <p>Fecha: @balance.Date</p>
                <p>Variación: @balance.Variation</p>
                <p>Categoría: @balance.Category</p>
                <p>Descripción: @balance.Description</p>
                <hr />
            }
        }
    </div>


    <!--Income bttn -->
    <script>
        document.querySelector('.income-btn').addEventListener('click', function (e) {
            document.querySelector('#isIncome').value = "true";
        });

        document.querySelector('.expense-btn').addEventListener('click', function (e) {
            document.querySelector('#isIncome').value = "false";
        });
    </script>

    <!--Wallet selector -->
    <script>
        // Función para actualizar la cartera seleccionada
        function updateSelectedWallet() {
            var selectedWalletId = $("#wallets").val();

            // Oculta todas las carteras
            $(".cartera").hide();

            // Muestra la cartera seleccionada
            $("#wallet-" + selectedWalletId).show();
        }

        // Ejecuta updateSelectedWallet cuando se cambia la opción seleccionada
        $("#wallets").change(function () {
            updateSelectedWallet();
        });

        // Muestra la primera cartera al cargar la página
        $(document).ready(function () {
            updateSelectedWallet();
        });
    </script>

    <!--Modal add wallet movement-->
    <script>
        // Función para mostrar el modal cuando se hace clic en el botón
        $(".show-form-btn").click(function () {
            $(this).next(".modal").show();
        });

        $(".show-balance-form-btn").click(function() {
            $(this).next(".modal").show();
        })

        // Cerrar el modal cuando se hace clic fuera del formulario
        $(window).click(function (e) {
            if ($(e.target).hasClass("modal")) {
                $(".modal").hide();
            }
        });
    </script>

    <!--Modal add wallet -->
    <script>
        // Función para mostrar el modal cuando se hace clic en el botón
        $(".show-add-wallet-form-btn").click(function () {
            $(".add-wallet-modal").show();
        });

        // Cerrar el modal cuando se hace clic fuera del formulario
        $(window).click(function (e) {
            if ($(e.target).hasClass("modal")) {
                $(".modal").hide();
            }
        });

    </script>

</body>
</html>
