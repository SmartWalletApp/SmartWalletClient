@{
    var customer = new VuelingExchangeManagerClient.Models.Customer
            {
                Id = 1,
                Name = "John Doe",
                Email = "johndoe@example.com",
                Wallets = new List<VuelingExchangeManagerClient.Models.Wallet>
        {
            new VuelingExchangeManagerClient.Models.Wallet
            {
                Id = 1,
                Coin = new VuelingExchangeManagerClient.Models.Coin { Name = "Bitcoin" },
                Balance = 2.0M,
                BalanceHistory = new List<VuelingExchangeManagerClient.Models.BalanceHistory>
                {
                    new VuelingExchangeManagerClient.Models.BalanceHistory
                    {
                        Id = 1,
                        Variation = 0.2M,
                        Category = "Gasto",
                        Date = DateTime.Now,
                        Description = "Compra de café"
                    },
                }
            },
            new VuelingExchangeManagerClient.Models.Wallet
            {
                Id = 2,
                Coin = new VuelingExchangeManagerClient.Models.Coin { Name = "USD" },
                Balance = 2.0M,
                BalanceHistory = new List<VuelingExchangeManagerClient.Models.BalanceHistory>
                {
                    new VuelingExchangeManagerClient.Models.BalanceHistory
                    {
                        Id = 2,
                        Variation = 0.2M,
                        Category = "Gasto",
                        Date = DateTime.Now.AddDays(-1),
                        Description = "Compra de café"
                    },
                }
            },
        }
            };
    var jwtToken = ViewBag.JwtToken;
    var userId = ViewBag.UserId;
}
@model Tuple<VuelingExchangeManagerClient.Models.Customer>




<!DOCTYPE html>
<html>
<head>
    <title>Gestión de Finanzas</title>
    <style>
        body {
            font-family: Arial, sans-serif;
        }

        .cartera, .cliente {
            border: 1px solid #000;
            padding: 20px;
            margin: 20px 0;
        }

            .cartera h2, .cliente h2 {
                margin: 0;
            }

            .cartera p, .cliente p {
                margin: 10px 0;
            }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
</head>
<body>
    <h1>Gestión de Finanzas Personales</h1>
    <!-- Agrega esta línea para mostrar el token JWT -->
    <p>Tu token JWT es: @jwtToken</p>

    <div>
        <p>Su ID de usuario es: @userId</p>
    </div>

    <div class="cliente">
        <h2>@Model.Item1.Name</h2>
        <p>ID: @Model.Item1.Id</p>
        <p>Email: @Model.Item1.Email</p>
    </div>
    <label for="wallets">Escoge una cartera:</label>
    <select id="wallets" name="wallets">
        @foreach (var cartera in Model.Item1.Wallets)
        {
            <option value="@cartera.Id">@cartera.Coin.Name</option>
        }
    </select>

    @foreach (var cartera in Model.Item1.Wallets)
    {
        <div class="cartera" id="wallet-@cartera.Id" style="display: none;">
            <h2>@cartera.Coin.Name</h2>
            <p>Cantidad: @cartera.Balance</p>

            @{
                var lastBalance = cartera.BalanceHistory.LastOrDefault();
                if (lastBalance != null)
                {
                    <h3>Último balance:</h3>
                    <p>Fecha: @lastBalance.Date</p>
                    <p>Variación: @lastBalance.Variation</p>
                    <p>Categoría: @lastBalance.Category</p>
                    <p>Descripción: @lastBalance.Description</p>
                }
                else
                {
                    <p>No hay historial de balance disponible.</p>
                }
            }
        </div>
    }



    <canvas id="ingresosGastosChart"></canvas>

    <div class="balances">
        @foreach (var cartera in customer.Wallets)
        {
            <h2>@cartera.Coin.Name</h2>
            @foreach (var balance in cartera.BalanceHistory)
            {
                <p>Fecha: @balance.Date</p>
                <p>Variación: @balance.Variation</p>
                <p>Categoría: @balance.Category</p>
                <p>Descripción: @balance.Description</p>
                <hr />
            }
        }
    </div>

    <!--Graphic balance -->
    <script>
        var ctx = document.getElementById('ingresosGastosChart').getContext('2d');
        var chart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio'],
                datasets: [{
                    label: 'Ingresos',
                    data: [12000, 15000, 8000, 18000, 20000, 15000],
                    backgroundColor: 'rgba(75, 192, 192, 0.5)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                },
                {
                    label: 'Gastos',
                    data: [8000, 12000, 6000, 15000, 18000, 10000],
                    backgroundColor: 'rgba(255, 99, 132, 0.5)',
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>

    <script>
        // Función para actualizar la cartera seleccionada
        function updateSelectedWallet() {
            var selectedWalletId = $("#wallets").val();

            // Oculta todas las carteras
            $(".cartera").hide();

            // Muestra la cartera seleccionada
            $("#wallet-" + selectedWalletId).show();
        }

        // Ejecuta updateSelectedWallet cuando se cambia la opción seleccionada
        $("#wallets").change(function () {
            updateSelectedWallet();
        });

        // Muestra la primera cartera al cargar la página
        $(document).ready(function () {
            updateSelectedWallet();
        });
    </script>
</body>
</html>
